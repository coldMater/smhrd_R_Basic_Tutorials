for(i in 1:10){
pie(data_matrix[,i], radius = 2.5, col = cm.colors(4), border = cm.colors(9),
cex.main=2, main = paste(colnames(data_matrix)[i],"병원현황\n"),
labels = paste(rownames(data_origin),
func_ratio(i),"%"))
}
graphics.off()
par(mfrow=c(2,5))
for(i in 1:10){
pie(data_matrix[,i], radius = 2.5, col = cm.colors(9), border = cm.colors(9),
cex.main=2, main = paste(colnames(data_matrix)[i],"병원현황\n"),
labels = paste(rownames(data_origin),
func_ratio(i),"%"))
}
setwd("/barplot")
setwd("/barplots")
list.dirs()
list.files()
read.csv("연도별요양기관별보험청구금액_2004_2013.csv")
count_origin <- read.csv("연도별요양기관별보험청구금액_2004_2013.csv")
plot(count_origin, type = "b")
count_origin
plot(count_origin[1], type = "b")
plot(count_origin, type = "b")
plot(count_origin, type = "b")
plot(count_origin)
??plot
t_origin)
??plot
t
plot(rownames(count_origin),colnames(count_origin))
plot(rownames(count_origin),colnames(count_origin),"","")
rownames(count_origin)<-count_origin$년도
plot(count_origin,,"","")
rownames(count_origin)<-count_origin$년도
plot(count_origin,,"","")
rownames(count_origin)<-count_origin$년도
rownames(count_origin)<-count_origin$년도
count_origin
rownames(count_origin)<-count_origin$년도
count_origin[-1]
rownames(count_origin)<-count_origin$년도
count_preprocess <- count_origin[-1]
plot(rownames(count_preProcess),max(count_preProcess)+1000,"","")
row.names(count_preProcess)
row.names(count_preProcess )
rownames(count_origin)<-count_origin$년도
count_preProcess <- count_origin[-1]
row.names(count_preProcess )
plot(rownames(count_preProcess),max(count_preProcess)+1000,"","")
plot(type="b")
plot(count_preProcess[1]type="b")
plot(count_preProcess[1],type="b")
graphics.off()
plot(count_preProcess[1],type="b")
plot(count_preProcess,type="b")
plot(count_preProcess,type="b")
as.matrix(count_preProcess)
count_matrix <- as.matrix(count_preProcess)
plot(count_matrix,type="b")
plot(count_matrix,type="o", lwd="2", axis=rownames(count_matrix)
rownames(count_matrix)
rownames(count_matrix)
plot(count_matrix,type="o", lwd="2", axes = F)
graphics.off()
plot(count_matrix,type="o", lwd="2", axes = F)
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = max(count_matrix)+1000)
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = max(count_matrix))
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix))
rownames(count_matrix)
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)))
plot(count_matrix/1000,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)+1000))
plot(count_matrix/100,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)+1000))
graphics.off()
plot(count_matrix/100,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)+1000))
plot(count_matrix/100,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)+100))
graphics.off()
plot(count_matrix/100,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)+100))
plot(count_matrix/100,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)+10))
graphics.off()
plot(count_matrix/100,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)+10))
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)+1000))
axis(2, ylim(0,max(count_matrix)+1000)))
axis(2, ylim(0,max(count_matrix)+1000))
axis(1, lab = rownames(count_matrix))
axis(1, at=10, lab = rownames(count_matrix))
axis(1, at=1:10, lab = rownames(count_matrix))
graphics.off()
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,max(count_matrix)+1000))
axis(2, ylim(0,max(count_matrix)+1000))
axis(1, at=1:10, lab = rownames(count_matrix))
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
axis(2, ylim(0,max(count_matrix)+1000))
axis(1, at=1:10, lab = rownames(count_matrix))
graphics.off()
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
axis(2, ylim(0,max(count_matrix)+1000))
axis(1, at=1:10, lab = rownames(count_matrix))
axis(2, ylim=c(0,max(count_matrix)+1000))
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
axis(2, ylim=c(0,max(count_matrix)+1000))
axis(1, at=1:10, lab = rownames(count_matrix))
rownames(count_matrix)
axis(1, at=1:10, lab = row.names(count_matrix))
rownames(count_matrix)
count_matrix <- as.matrix(count_preProcess)
count_matrix
count_matrix <- count_matrix/10000
count_matrix
count_matrix <- count_matrix/10000
rownames(count_origin)<-count_origin$년도
count_preProcess <- count_origin[-1]
count_matrix <- as.matrix(count_preProcess)
count_matrix <- count_matrix/10000
count_matrix
rownames(count_origin)<-count_origin$년도
count_preProcess <- count_origin[-1]
rownames(count_origin)<-count_origin$년도
count_preProcess <- count_origin[-1]
count_matrix <- as.matrix(count_preProcess)
list.files()
count_origin <- read.csv("연도별요양기관별보험청구금액_2004_2013.csv")
rownames(count_origin)<-count_origin$년도
count_preProcess <- count_origin[-1]
count_matrix <- as.matrix(count_preProcess)
count_preProcess
count_matrix <- count_matrix/1000000
count_matrix
count_matrix <- round(count_matrix/1000000)
count_matrix
count_matrix <- round(count_matrix/1000000)
count_matrix
count_preProcess
count_matrix <- round(count_matrix/1000000)
count_matrix
count_origin <- read.csv("연도별요양기관별보험청구금액_2004_2013.csv")
rownames(count_origin)<-count_origin$년도
count_preProcess <- count_origin[-1]
count_matrix <- as.matrix(count_preProcess)
count_preProcess
count_matrix <- round(count_matrix/1000000)
count_matrix
rownames(count_matrix)
graphics.off()
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
axis(2, ylim=c(0,max(count_matrix)+1000))
axis(2, ylim=c(0,max(count_matrix)+1000), labels = seq(0,9000,1000))
axis(2, ylim=c(0,max(count_matrix)+1000), labels = seq(0,9000,1000))
axis(2, ylim=c(0,max(count_matrix)+1000), labels = seq(0,9000,1000), at = "Null")
axis(2, ylim=c(0,max(count_matrix)+1000), labels = seq(0,9000,1000), at = Null)
axis(2, labels = seq(0,9000,1000), at = Null)
rownames(count_matrix)
graphics.off()
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
axis(2, labels = seq(0,9000,1000), at = Null)
axis(2, labels = seq(0,9000,1000), at = Null)
axis(2, labels = seq(0,9000,1000))
axis(2)
??axis
axis(2, labels = T)
axis(2, labels = T, ylim = c(2000,6000))
Axis(2, labels = T)
Axis(2, labels = T, side="left")
??axis
axis(2, at = NULL, labels = TRUE)
axis(2, at = NULL, labels = TRUE, tick=TRUE)
axis(2, at = NULL, labels = TRUE, tick=TRUE, lty = "solid")
axis(2, at = NULL, labels = TRUE, tick=TRUE, lty = "solid", padj=100)
graphics.off()
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
axis(2, at = NULL, labels = TRUE, tick=TRUE, lty = "solid", padj=100)
axis(2, at = NULL, labels = TRUE, tick=TRUE, lty = "solid", )
axis(2, at = NULL, labels = TRUE, tick=TRUE, lty = "solid", outer=T)
View(data_origin)
axis(2, at = 1:10)
graphics.off()
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
??axis
axis(2, at = 1:10)
axis(2, at = 1:10)
axis(2, at = 1:10, labels = c(1,2,3,4,5,6,7,8,9,10))
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
axis(2, at = 1:10, labels = c(1,2,3,4,5,6,7,8,9,10))
graphics.off()
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="")
axis(2, at = 1:10, labels = c(1,2,3,4,5,6,7,8,9,10))
max(count_matrix)
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,rownames(count_matrix)))
graphics.off()
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,rownames(count_matrix)))
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,9000)
plot(count_matrix,type="o", lwd="2", axes = F, xlab="", ylab="", ylim = c(0,9000))
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,9000))
axis(2, at = 1:10, labels = c(1,2,3,4,5,6,7,8,9,10))
axis(2, at = 1:10, labels = c(1,2,3,4,5,6,7,8,9,10), ylim = c(0,9000))
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,9000))
axis(2, at = 1:10, labels = c(1,2,3,4,5,6,7,8,9,10), ylim = c(0,9000))
axis(2, ylim = c(0,9000))
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,9000))
axis(2, ylim = c(0,9000))
axis(1, at=1:length(count_matrix[,1]), lab = row.names(count_matrix))
axis(1, at=1:length(count_matrix[,1]), lab = row.names(count_matrix))
axis(1, at=1:10, lab = row.names(count_matrix))
axis(1, at=1:10, lab = row.names(count_matrix), las = 2)
row.names(count_matrix)
axis(2, ylim = c(0,9000))
axis(1, at=1:10, lab = row.names(count_matrix), las = 2)
axis(2, ylim = c(0,9001))
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,9000))
row.names(count_matrix)
axis(2, ylim = c(0,9001))
axis(2, ylim = c(0,10000))
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,9000))
row.names(count_matrix)
axis(2, ylim = c(0,10000))
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,10000))
row.names(count_matrix)
axis(2, ylim = c(0,10000))
axis(1, at=1:10, lab = row.names(count_matrix), las = 2)
year <- row.names(count_matrix)
year
axis(1, at=1:10, lab = year, las = 2)
axis(1, at=1:10, lab = year, las = 2)
axis(1, at=1:10, lab = year)
rownames(count_matrix)
class(rownames(count_matrix))
axis(1, at=1:10, lab = c(2004,2005,2006,07,08,09,10,11,12,13))
axis(1, at=1:10, lab = c(2004,2005,2006,07,08,09,10,11,12,13))
lines()
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,10000))
axis(1, at=1:10, lab = c(2004,2005,2006,07,08,09,10,11,12,13))
count_origin <- read.csv("연도별요양기관별보험청구금액_2004_2013.csv")
rownames(count_origin)<-count_origin$년도
count_preProcess <- count_origin[-1]
count_matrix <- as.matrix(count_preProcess)
count_preProcess
count_matrix <- round(count_matrix/1000000)
count_matrix
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,10000))
axis(2, ylim = c(0,10000))
axis(1, at=1:10, lab = c(2004,2005,2006,07,08,09,10,11,12,13))
axis(1)
axis(1, at=1:10)
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,10000))
year <- row.names(count_matrix)
axis(2, ylim = c(0,10000))
axis(1, at=1:10)
axis(1, labels = year)
axis(1, labels = year, at = 1:10)
axis(1, labels = c(1,2,3,4,5,6,7,8,9,10), at = 1:10)
axis(1)
count_preProcess
axis(1,at=1:10,lab=row.names(count_preProcess),las=2)
plot(count_matrix,type="o",
lwd="2",
axes = F,
xlab="",
ylab="",
ylim = c(0,10000))
year <- row.names(count_matrix)
axis(2, ylim = c(0,10000))
axis(1,at=1:10,lab=row.names(count_preProcess),las=2)
count_origin
count_origin <- read.csv("연도별요양기관별보험청구금액_2004_2013.csv")
count_origin
list.files()
count_origin <- read.csv("연도별요양기관별보험청구금액_2004_2013.csv")
list.files()
count_origin <- read.csv("barplot/연도별요양기관별보험청구금액_2004_2013.csv")
count_origin
rownames(count_origin) <- count_origin[,1]
count_origin <- count_origin[,-5]
count_origin
rownames(count_origin) <- count_origin[,1]
count_origin
count_origin <- read.csv("barplot/연도별요양기관별보험청구금액_2004_2013.csv")
count_origin
rownames(count_origin) <- count_origin[,1]
count_origin <- count_origin[,-1]
count_origin
count_origin <- count_origin[,-5]
count_origin
count_origin <- count_origin/10000
count_origin <- round(count_origin/10000)
count_origin
count_origin
rownames(count_origin) <- count_origin[,1]
count_origin <- count_origin[,-1]
count_origin <- count_origin[,-5]
count_origin <- round(count_origin/10000)
count_origin
count_origin <- read.csv("barplot/연도별요양기관별보험청구금액_2004_2013.csv")
count_origin
rownames(count_origin) <- count_origin[,1]
count_origin <- count_origin[,-1]
count_origin <- count_origin[,-5]
count_origin <- round(count_origin/10000)
count_origin
count_origin <- read.csv("barplot/연도별요양기관별보험청구금액_2004_2013.csv")
count_origin
rownames(count_origin) <- count_origin[,1]
count_origin <- count_origin[,-1]
count_origin <- count_origin[,-5]
count_origin <- round(count_origin/100000)
count_origin
plot(insurance[,1], ylim = c(0,1000), type = "o", axes=F, )
plot(count_origin[,1], ylim = c(0,1000), type = "o", axes=F)
axis(1, at=1:10, labels(rownames(count_origin)))
count_origin
axis(1, at=1:10, labels(rownames(count_origin)))
plot(count_origin[,1], ylim = c(0,1000), type = "o", axes=F, ylim = c(0,85000))
axis(2,las=2)
plot(count_origin[,1], ylim = c(0,1000), type = "o", axes=F, ylim = c(0,85000), )
plot(count_origin[,1], ylim = c(0,1000), type = "o", axes=F
plot(count_origin[,1], ylim = c(0,1000), type = "b", axes=F
plot(count_origin[,1], ylim = c(0,1000), type = "b", axes=F)
plot(count_origin[,1], ylim = c(0,100000), type = "b", axes=F)
axis(1, at=1:10, labels(rownames(count_origin)))
axis(1, at=1:10, labels(rownames(count_origin)))
axis(2,las=2)
count_origin <- round(count_origin/10)
count_origin
plot(count_origin[,1], ylim = c(0,10000), type = "b", axes=F)
axis(1, at=1:10, labels(rownames(count_origin)))
axis(2,las=2)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F)
axis(1, at=1:10, labels(rownames(count_origin)))
axis(2,las=2)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 1)
axis(1, at=1:10, labels(rownames(count_origin)))
axis(2,las=2)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19)
axis(1, at=1:10, labels(rownames(count_origin)))
axis(2,las=2)
rownames(count_origin)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = , xlab="", ylab="")
color = cm.colors(10)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[1], xlab="", ylab="")
axis(1, at=1:10, labels(rownames(count_origin)))
axis(2,las=2)
axis(1, at=1:10, labels =(rownames(count_origin)))
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[1], xlab="", ylab="")
axis(1, at=1:10, labels =(rownames(count_origin)))
axis(2,las=2)
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[i], xlab="", ylab="")
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[i], xlab="", ylab="")
}
color = rainbow(10)
color = rainbow(10)
color = rainbow(10)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[1], xlab="", ylab="")
axis(1, at=1:10, labels =(rownames(count_origin)))
axis(2,las=2)
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[i], xlab="", ylab="")
}
source('D:/Rvisualize/20171031_map/barplot/lineChart_byYear.R', encoding = 'UTF-8', echo=TRUE)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = rainbow(1), xlab="", ylab="")
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = rainbow(i), xlab="", ylab="")
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = rainbow(i), xlab="", ylab="")
}
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color(i), xlab="", ylab="")
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color(i), xlab="", ylab="")
}
rownames(count_origin)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color(1), xlab="", ylab="")
axis(1, at=1:10, labels =(rownames(count_origin)))color
axis(2,las=2)
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color(i), xlab="", ylab="")
}
legend
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color(i), xlab="", ylab="")
}
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color(1), xlab="", ylab="")
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[i], xlab="", ylab="")
}
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[1], xlab="", ylab="")
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[i], xlab="", ylab="")
}
axis(1, at=1:10, labels =(rownames(count_origin)))color
axis(2,las=2)
axis(2,las=2)
axis(2,las=2)
axis(1, at=1:10, labels =(rownames(count_origin)))
legend(10000,1,rownames(count_origin),fill=color)
legend(10000,1,rownames(count_origin),col=color)
legend(10000,1,rownames(count_origin))
legend(10,1,rownames(count_origin))
legend(9,2,rownames(count_origin))
legend(1,10000,rownames(count_origin))
legend(1,10000,rownames(count_origin), col = color)
legend(1,10000,rownames(count_origin), col = color)
legend(1,10000,colnames(count_origin), col = color)
legend(1,10000,colnames(count_origin), fill = color)
rownames(count_origin)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[1], xlab="", ylab="",
main = "")
axis(1, at=1:10, labels =(rownames(count_origin)))
axis(2,las=2)
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[i], xlab="", ylab="")
}
legend(1,10000,colnames(count_origin), fill = color)
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[1], xlab="", ylab="",
main = "보건 기관 보험 등록 건수 추")
plot(count_origin[,1], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[1], xlab="", ylab="",
main = "보건 기관 보험 등록 건수 추이")
axis(1, at=1:10, labels =(rownames(count_origin)))
axis(2,las=2)
for(i in 2:10){
lines(count_origin[,i], ylim = c(0,10000), type = "o", axes=F, lwd = 2, pch=19, col = color[i], xlab="", ylab="")
}
legend(1,10000,colnames(count_origin), fill = color)
abline(h=seq(0,10000,1000), lty=3, lwd=0.2, col = "gray")
abline(h=seq(0,10000,1000), v = seq(0,10,1), lty=3, lwd=0.2, col = "gray")
legend(1,10000,colnames(count_origin), fill = color)
for(i in 1:10){
pie(data_matrix[,i], radius = 2.5, col = cm.colors(9), border = cm.colors(9),
cex.main=2, main = paste(colnames(data_matrix)[i],"병원현황\n"),
labels = paste(rownames(data_origin),
func_ratio(i),"%"))
}
library(RColorBrewer)
color = brewer.pal(9,"Pastel1")
display.brewer.all()
setwd("barplot/")
data_origin <- read.csv("2013년_서울_주요구별_병원현황.csv")
row.names(data_origin) <- data_origin$표시과목
data_process <- data_origin[-1]
data_process
data_matrix <- as.matrix(data_process)
data_matrix
#아래 코드는 동일한 자료를 barplot 으로 그리는 코드이다.
#for(i in 1:10){
#  barplot(data_matrix[,i], ylim=c(0,350), col = color, main = paste(colnames(data_matrix)[i],"병원현황"), las=2)
#  abline(h=seq(0,350,50), lty=3, lwd=0.2, col = "gray")
#}
graphics.off()
par(mfrow=c(2,5))
for(i in 1:10){
pie(data_matrix[,i], radius = 2.5, col = cm.colors(9), border = cm.colors(9),
cex.main=2, main = paste(colnames(data_matrix)[i],"병원현황\n"),
labels = paste(rownames(data_origin),
func_ratio(i),"%"))
}
# 열의 indexNumber 를 넣어주면 해당 열의 각 행의 백분율 정보를 벡터 형태로 출력해주는 함수
func_ratio<-function(i){
row = data_matrix[,i]
colsum = sum(data_matrix[,i])
return(round((row/colsum)*100,1))
#리턴을 하지 않아도 마지막 열이 리턴되는듯하다.
}
for(i in 1:10){
pie(data_matrix[,i], radius = 2.5, col = cm.colors(9), border = cm.colors(9),
cex.main=2, main = paste(colnames(data_matrix)[i],"병원현황\n"),
labels = paste(rownames(data_origin),
func_ratio(i),"%"))
}
