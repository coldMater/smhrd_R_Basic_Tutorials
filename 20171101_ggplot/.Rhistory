install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
list.files()
setwd("1101 6차시_ggplot()")
korean_score <- read.csv("학생별국어성적_new.csv")
korean_score
ggplot(korean, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar()
geom_bar(stat = "identity")
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar()
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar(stat = "identity")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
install.packages("ggplot2")
install.packages("ggplot2")
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar(stat = "identity", fill = "pink")
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar(stat = "identity", fill = "pink", color = "gray")
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar(stat = "identity", fill = "pink", color = "gray")
install.packages("ggplot2")
library(ggplot2)
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar(stat = "identity", fill = "pink", color = "gray")
+ theme(axis.text.x = element_text(angle=45, hjust=1.2, vjust=1, colour = "red", size = 5))
ggplot(korean_score, aes(x=이름, y=점수))
+ geom_bar(stat = "identity", fill = "pink", color = "gray")
+ theme(axis.text.x = element_text(angle=45, hjust=1.2, vjust=1, colour = "red", size = 5))
+ geom_bar(stat = "identity", fill = "pink", color = "gray")
+ geom_bar(stat = "identity", fill = "pink", color = "gray")
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar(stat = "identity", fill = "pink", color = "gray")
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar(stat = "identity", fill = "pink", color = "gray") +theme(axis.text.x = element_text(angle=45, hjust=1.2, vjust=1, colour = "red", size=5))
#ggplot(korean_score, aes(x=이름, y=점수)) + geom_point()
ggplot(korean_score, aes(x=이름, y=점수)) + geom_bar(stat = "identity", fill = "pink", color = "gray") + theme(axis.text.x = element_text(angle=45, hjust=1.2, vjust=1, colour = "pink", size=15))
library(ggplot2)
list.files()
score_origin <- read.csv("학생별과목별성적_국영수_new.csv")
score_origin
score_sort <- arrange(score_origin, 이름, 과목)
library(plyr) #데이터 가공할 때 많이 사용하는 라이브러리 : arrange()
score_sort <- arrange(score_origin, 이름, 과목)
core_sort
score_sort
score_sort <- arrange(score_origin, 이름, 과목, desc(점수))
score_sort <- arrange(score_origin, 이름, 과목, desc=점수)
score_sort
score_xy <- ddply(score_sort, "이름", transform, "누적합계" = cumsum(점수))
score_xt
score_xy
score_sort2 <- ddply(score_sort2, "이름", transform, yPosition = 누적합계 - 점수*0.5)
score_sort2
score_sort2 <- ddply(score_sort2, "이름", transform, yPosition = 누적합계 - 점수*0.5)
score_sortxy <- ddply(score_xy, "이름", transform, yPosition = 누적합계 - 점수*0.5)
score_sortxy
ggplot(score_sort2, aes(x=이름, y= 점수, fill = 과목)) + goem_bar(stat="identity")
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + goem_bar(stat="identity")
score_sortxy
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + goem_bar(stat="identity")
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity")
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(누적합계, "점"), color = "black", size = 3 ))
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(누적합계, "점"), size = 3 ))
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(누적합계), size = 3 ))
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(누적합계)),color = "white", size = 3 ))
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(누적합계)), color = "white", size = 3))
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(누적합계)), color = "white", size = 3)
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(누적합계)), color = "white", size = 5)
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점)), color = "white", size = 5)
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점)), color = "white", size = 5)
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
list.files
setwd("")
list.files()
read.csv("학생별전체성적_new.csv")
score_All <- read.csv("학생별전체성적_new.csv")
ggplot(score_All, aes(x=국어, y=영어)) + geom_point()
ggplot(score_All, aes(x=물리, y=수학)) + geom_point()
ggplot(score_All, aes(x=물리, y=수학)) + geom_point(color = "blue", aes(size = score_All$물리) + geom_line()
ggplot(score_All, aes(x=물리, y=수학)) + geom_point(color = "blue", aes(size = score_All$물리)) + geom_line()
ggplot(score_All, aes(x=물리, y=수학)) + geom_point(color = "blue", aes(size = score_All$물리)) + geom_line()
ggplot(score_All, aes(x=물리, y=수학)) + geom_point(color = "#3355ff", aes(size = score_All$물리)) + geom_line()
ggplot(score_All, aes(x=물리, y=수학)) + geom_point(color = "#3355dd", aes(size = score_All$물리)) + geom_line()
ggplot(score_All, aes(x=물리, y=수학)) + geom_point(color = "#3355cc", aes(size = score_All$물리)) + geom_line()
score_sort
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group="이름")) + geon_line()
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group="이름")) + geom_line()
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group=이름)) + geom_line()
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group=이름)) + geom_line(lwd = 1.5)
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group=이름)) + geom_line(lwd = 1.5) + geom_point(size=3)
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group=이름)) + geom_line(lwd = 1.5) + geom_point(size=3)
par(mfrow=c(1,2))
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group=이름)) + geom_line(lwd = 1.5) + geom_point(size=3)
par(mfrow=c(1,2))
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group=이름)) + geom_line(lwd = 1.5) + geom_point(size=3)
graphics.off()
par(mfrow=c(1,2))
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group=이름)) + geom_line(lwd = 1.5) + geom_point(size=3)
list.files()
read.csv("서울지하철_5-8호선_이용현황_시간대별.csv")
count_subway <- read.csv("서울지하철_5-8호선_이용현황_시간대별.csv")
ggplot(count_subway, aes(x=시간, y=(승차인원+하차인원), color = 호선명, group=호선명)) + geom_line(lwd = 1.5) + geom_point(size=3)
ggplot(count_subway, aes(x=시간, y=(승차인원+하차인원), color = 호선명, group=호선명)) + geom_line(lwd = 1) + geom_point(size=3)
ggplot(count_subway, aes(x=시간, y=(승차인원+하차인원), color = 호선명, group=호선명)) + geom_line(lwd = 1) + geom_point(size=2)
ggplot(count_subway, aes(x=시간, y=(승차인원+하차인원), color = 호선명, group=호선명)) + geom_line(lwd = 1) + geom_point(size=1)
ggplot(count_subway, aes(x=시간, y=(승차인원+하차인원), color = 호선명, group=호선명)) + geom_line(lwd = 1) + geom_point(size=1.5)
ggplot(count_subway, aes(x=시간, y=(승차인원+하차인원), color = 호선명, group=호선명, ylab="총")) + geom_line(lwd = 1) + geom_point(size=1.5)
ggplot??
??ggplot
??ggplot
count_subway <- ddply(count_subway, 승하차총합 = 승차인원+하차인원)
count_subway <- ddply(count_subway, transform, 승하차총합 = 승차인원+하차인원)
count_subway <- ddply(count_subway, "호선명", transform, 승하차총합 = 승차인원+하차인원)
count_subway
ggplot(score_All, aes(x=물리, y=수학)) + geom_point(color = "#3355cc", aes(size = score_All$물리)) + geom_line()
count_subway <- read.csv("서울지하철_5-8호선_이용현황_시간대별.csv")
metro <- cbind(count_subway, apply(metro[,3:4], 1, sum))
metro <- cbind(count_subway, apply(count_subway[,3:4], 1, sum))
metro
metro <- cbind(count_subway, 총원 = apply(count_subway[,3:4], 1, sum))
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
ggplot(count_subway, aes(x=시간, y=(승차인원+하차인원), color = 호선명, group=호선명)) + geom_line(lwd = 1) + geom_point(size=2)
source('D:/Rvisualize/ggplot/ggplot_metro.R', encoding = 'UTF-8', echo=TRUE)
library(ggplot2)
list.files()
perform <- read.csv("상반기사원별월별실적현황_new.csv" )
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
perform_ratio <- cbind(perform, 달성률 = apply(perform[,3:4], 1, round(실적금액/목표금액)*100))
perform_ratio <- cbind(perform, 달성률 = apply(perform[,3:4], 2, round(실적금액/목표금액)*100))
perform_ratio <- ddply(perform, "이름", transform, 달성률 = round((실적금액/목표금액)*100))
perform_ratio
ggplot(count_subway, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red")
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red", lwd = 2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red", lwd = 1.5)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red", lwd = 1.2)
+ geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100
+ geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red", lwd = 1.2)
+ geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red", lwd = 1.2)
)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름))
+ geom_line(lwd = 1)
+ geom_point(size=2)
+ geom_hline(yintercept = 100, color = "red", lwd = 1.2))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red", lwd = 1.2))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red", lwd = 1.2))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red", lwd = 1.2))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2) + geom_hline(yintercept = 100, color = "red", lwd = 1.2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) + geom_line(lwd = 1) + geom_point(size=2)
+geom_hline(yintercept = 100, color = "red", lwd = 1.2)
gplot <- ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름))
gplot <- gplot + geom_line(lwd = 1) + geom_point(size=2)
gplot+geom_hline(yintercept = 100, color = "red", lwd = 1.2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_line(aes(y=100))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름))
geom_line(lwd = 1)
geom_point(size=2)
+
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2)+
scale.colour_manual(values=rainbow(6))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2)+
scale.colour_manual(values=rainbow(6))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2)+
scale.colour_manual(values=rainbow(6))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale.colour_manual(values =rainbow(6))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =rainbow(6))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =cm.colors(6))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =heat.colors(6))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =rainbow.colors(20))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =rainbow(20))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =rainbow(10))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =rainbow(50))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =rainbow(25))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =rainbow(3))
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values =rainbow(6))
library(RColorBrewer)
pal <- brewer.pal(6,"Set1")
scale_colour_manual(values=pal
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values=pal)
ratio <- function(x){
return (round((x[1]/x[2])*100, 1))
}
perform_ratio <- cbind(employee, 달성률=apply(perform[,3:4],1,ratio)
perform_ratio <- cbind(employee, 달성률=apply(perform[,3:4],1,ratio))
perform_ratio <- cbind(employee, 달성률=apply(perform[,3:4],1,ratio))
perform_ratio <- cbind(perform, 달성률=apply(perform[,3:4],1,ratio))
perform_ratio
perform_ratio <- cbind(perform, 달성률=apply(perform[3:4],1,ratio))
perform_ratio
display.brewer.all()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values=pal)
pal <- brewer.pal(6,"Accent")
pal <- brewer.pal(6,"Set1")
pal <- brewer.pal(6,"Accent")
ggplot(perform_ratio, aes(x=월, y=달성률, color = 이름, group=이름)) +
geom_line(lwd = 1) +
geom_point(size=2) +
geom_hline(yintercept = 100, color = "red", lwd = 1.2) +
scale_colour_manual(values=pal)
??apply
list.files()
pulbicArea <- read.csv(""광주광역시_공공시설개방정보_20150918.csv"")
pulbicArea <- read.csv(""광주광역시_공공시설개방정보_20150918.csv"")
pulbicArea <- read.csv("광주광역시_공공시설개방정보_20150918.csv")
View(pulbicArea)
View(pulbicArea)
View(pulbicArea)
install.packages("ggmap")
library(ggmap)
get_map("kwangju")
get_map("kwangju", zoom = 12, maptype = "roadmap")
ggmap(imap)
imap <- get_map("kwangju", zoom = 12, maptype = "roadmap")
ggmap(imap)
imap <- get_map("kwangju", zoom = 12, maptype = "satelite")
ggmap(imap)
imap <- get_map("kwangju", zoom = 12, maptype = "satellite")
ggmap(imap)
imap <- get_map("kwangju", zoom = 12, maptype = "roadmap")
ggmap(imap)
gmap + geom_point(publicArea, aes(x=경도, y=위도), size = 2, color = "red")
imap + geom_point(publicArea, aes(x=경도, y=위도), size = 2, color = "red")
ggmap(imap) + geom_point(publicArea, aes(x=경도, y=위도), size = 2, color = "red")
ggmap(imap) + geom_point(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red")
ggmap(imap) + geom_point(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red")
publbicArea <- read.csv("광주광역시_공공시설개방정보_20150918.csv")
publicArea <- read.csv("광주광역시_공공시설개방정보_20150918.csv")
publicArea <- read.csv("광주광역시_공공시설개방정보_20150918.csv")
imap <- get_map("kwangju", zoom = 12, maptype = "roadmap")#maptype : roadmap, hybrid, satellite, terrain
library(ggmap)
imap <- get_map("kwangju", zoom = 12, maptype = "roadmap")#maptype : roadmap, hybrid, satellite, terrain
ggmap(imap) + geom_point(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red")
ggmap(imap) + geom_point(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red", alpha = 0.3)
ggmap(imap) + geom_point(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red", alpha = 0.3, border = none)
ggmap(imap) +
(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red", alpha = 0.3) +
geom_text(data = publicArea, aes(x=경도, y=위도+0.005), label = publicArea$개방시설명, size = 1)
ggmap(imap) +
(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red", alpha = 0.3) +
geom_text(data = publicArea, aes(x=경도, y=위도+0.005), label = publicArea$개방시설명, size = 1)
ggmap(imap) +
(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red", alpha = 0.3) +
geom_text(data = publicArea, aes(x=경도, y=위도+0.005), label = publicArea$개방시설명, size = 1)
ggmap(imap) +
geom_point(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red", alpha = 0.3) +
geom_text(data = publicArea, aes(x=경도, y=위도+0.005), label = publicArea$개방시설명, size = 1)
ggmap(imap) +
geom_point(data = publicArea, aes(x=경도, y=위도), size = 2, color = "red", alpha = 0.3) +
geom_text(data = publicArea, aes(x=경도, y=위도+0.005), label = publicArea$개방시설명, size = 2)
list.files()
crash <- read.csv("2016년_자전거사고다발지.csv")
library(ggmap)
library(ggplot2)
crash2 <- crash[,7:14]
View(crash2)
View(crash2)
crash3 <- cbind(crash2, 총합 = apply(crash2[,1:6],1,sum))
View(crash3)
View(crash3)
map_korea <- get_map("jeonju", zoom = 7, maptype = "roadmap")
ggmap(map_korea)
map_korea <- get_map("goesan", zoom = 7, maptype = "roadmap")
ggmap(map_korea)
map_korea <- get_map("kimcheon", zoom = 7, maptype = "roadmap")
ggmap(map_korea)
map_korea <- get_map("seongju", zoom = 7, maptype = "roadmap")
ggmap(map_korea)
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합))
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총))
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합))
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "white", high="red")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "white", high="red", alpha = 0.3)
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "pink", high="red", alpha = 0.3)
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "pink", high="red")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합*10)) +
scale_color_gradient(low = "pink", high="red")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합*5)) +
scale_color_gradient(low = "pink", high="red")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "#0000aa", high="blue")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "#000055", high="0000ff")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "#000055", high="#0000ff")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "#000033", high="#0000ff")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "#000011", high="#0000ff")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "white", high="pink")
ggmap(map_korea) +
geom_point(data=crash3, aes(x=경도, y=위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "white", high="red")
grap("서울특별시", crash$다발지명)
grep("서울특별시", crash$다발지명)
seoul <- crash[grep("서울특별시", crash$다발지명),]
seoul
View(seoul)
View(seoul)
seoul2 <- seoul[,7:14]
View(seoul2)
View(seoul2)
seoul3 <- cbind(seoul2, 총합 = apply(seoul2[,1:6], 1, sum))
ggmap(map_korea) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합))
map_seoul<- get_map("seoul", zoom = 12, maptype = "roadmap")
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합))
map_seoul<- get_map("seoul", zoom = 10, maptype = "roadmap")
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합))
map_seoul<- get_map("seoul", zoom = 11, maptype = "roadmap")
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합))
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합)) +
scale_color_gradient((low = "white", high = "blue"))
map_seoul<- get_map("seoul", zoom = 11, maptype = "roadmap")
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합)) +
scale_color_gradient((low = "white", high = "blue"))
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합+10)) +
scale_color_gradient((low = "white", high = "blue"))
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합+10)) +
scale_color_gradient((low = "white", high = "blue"))
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합)) +
scale_color_gradient((low = "white", high = "blue"))
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합)) +
scale_color_gradient(low = "white", high = "blue")
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합+10)) +
scale_color_gradient(low = "white", high = "blue")
ggmap(map_seoul) +
geom_point(data = seoul3, aes(x=경도, y= 위도, color = 총합, size = 총합), size = 5) +
scale_color_gradient(low = "white", high = "blue")
# path 연결하여 경로 추적
#----------------------------------------------------------------------------#
ggmap(map_seoul) +
geom_point(data=seoul3, aes(x=경도 y=위도), size = 1, color = "red", alpha =0.5) +
geom_path(data=seoul3, aes(x=경도 y=위도), linetype = 3, col = "blue")
# path 연결하여 경로 추적
#----------------------------------------------------------------------------#
ggmap(map_seoul) +
geom_point(data=seoul3, aes(x=경도, y=위도), size = 1, color = "red", alpha =0.5) +
geom_path(data=seoul3, aes(x=경도, y=위도), linetype = 3, col = "blue")
