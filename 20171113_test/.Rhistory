library(ggplot2)
library(plyr) #데이터 가공할 때 많이 사용하는 라이브러리 : arrange(), ddply()
list.files()
score_origin <- read.csv("학생별과목별성적_국영수_new.csv")
score_sort <- arrange(score_origin, 이름, 과목)
score_xy <- ddply(score_sort, "이름", transform, "누적합계" = cumsum(점수))
score_sortxy <- ddply(score_xy, "이름", transform, yPosition = 누적합계 - 점수*0.5)
score_origin <- read.csv("data\\학생별과목별성적_국영수_new.csv")
score_origin <- read.csv("data/학생별과목별성적_국영수_new.csv")
score_origin <- read.csv("D:/Rvisualize/20171101_ggplot/data/학생별과목별성적_국영수_new.csv")
score_sort <- arrange(score_origin, 이름, 과목)
score_xy <- ddply(score_sort, "이름", transform, "누적합계" = cumsum(점수))
score_sortxy <- ddply(score_xy, "이름", transform, yPosition = 누적합계 - 점수*0.5)
score_sortxy
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
ggplot(score_sort, aes(x=과목, y=점수, color = 이름, group=이름)) + geom_line(lwd = 1.5) + geom_point(size=3)
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
library(ggplot2)\
library(ggplot2)
list.files()
setwd("data")
list.files()
read.csv("2014년 범죄발생 시간대별(구분없음).csv")
data_origin = read.csv("2014년 범죄발생 시간대별(구분없음).csv")
data_origin["시간"]
data_origin["시간"].left(2)
data_origin["시간"].split(":")
data_origin["구분"] = data_origin["시간"]
data_origin
data_origin["구분"] = data_origin["시간"][0]
data_origin["시간"][0]
data_origin["시간"][1]
setwd("data")
list.files()
read.csv("2014년 범죄발생 시간대별(구분있음).csv")
data_origin = read.csv("2014년 범죄발생 시간대별(구분있음).csv")
library(ggplot2)
library(plyr)
data_origin = read.csv("2014년 범죄발생 시간대별(구분있음).csv")
score_sort <- arrange(score_origin,범죄중분류,구분)
score_sort <- arrange(score_origin,"범죄중분류","구분")
score_sort <- arrange(data_origin,"범죄중분류","구분")
score_sort <- arrange(data_origin,"범죄중분류","구분")
data_sort <- arrange(data_origin,범죄중분류,구분)
data_sort
data_origin <- read.csv("2014년 범죄발생 시간대별(구분있음).csv")
data_sort <- arrange(data_origin,범죄중분류,구분)
data_xy <-
)
data_origin <- read.csv("2014년 범죄발생 시간대별(구분있음).csv")
data_sort <- arrange(data_origin,범죄중분류,구분)
data_xy <-
)
data_xy <- ddply(data_sort, "범죄중분류", transform, "발생건수" = cumsum(발생건수))
data_sortxy <- ddply(data_xy,"범죄중분류",transform,yPosition = 발생건수합계 + 0.5)
data_sortxy
data_xy
data_origin <- read.csv("2014년 범죄발생 시간대별(구분있음).csv")
data_sort <- arrange(data_origin,범죄중분류,구분)
data_sort
#transform : 새로운 연산을 해서 데이터를 각 행별로 출력
## dd 란 들어가는 데이터와 나오는 데이터가 모두 dataframe 이라는 뜻이다.
score_xy
data_sort
data_sort["새구분"] <- data_sort["범죄중분류"]+data_sort["구분"]
data_sort["새구분"] <- paste(data_sort["범죄중분류"],"_",data_sort["구분"])
data_sort
data_sort
list.files()
data_origin <- read.csv("2014년 범죄발생 시간대별(구분있음).csv")
data_sort
View(data_xy)
data_origin <- read.csv("2014년 범죄발생 시간대별(구분있음).csv")
data_origin <- read.csv("2014년 범죄발생 시간대별(구분있음).csv")
setwd("data")
data_origin <- read.csv("2014년 범죄발생 시간대별(구분있음).csv")
data_sort <- arrange(data_origin,범죄중분류,구분)
data_sort
library(ggplot2)
library(plyr)
data_sort <- arrange(data_origin,범죄중분류,구분)
data_sort
data_xy <- ddply(data_sort, ["이름","구분"], transform, "발생건수합계" = cumsum(발생건수))
data_xy <- ddply(data_sort, ("이름","구분"), transform, "발생건수합계" = cumsum(발생건수))
data_xy <- ddply(data_sort, "이름","구분", transform, "발생건수합계" = cumsum(발생건수))
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
data_xy <- ddply(data_sort, 이름, transform, 발생건수합계 = cumsum(발생건수))
data_xy <- ddply(data_sort, 범죄중분류, transform, 발생건수합계 = cumsum(발생건수))
data_xy <- ddply(data_sort, "범죄중분류", transform, 발생건수합계 = cumsum(발생건수))
data_xy
data_sortxy
ggplot(data_sortxy, aes(x = 범죄중분류, y = 발생건수, fill = 구분))
data_sortxy <- ddply(data_xy,"범죄중분류",transform, yPosition = 발생건수합계 + 0.5)
(data_sortxy, aes(x = 범죄중분류, y = 발생건수, fill = 구분))
ggplot(data_sortxy, aes(x = 범죄중분류, y = 발생건수, fill = 구분))
ggplot(data_sortxy.head(), aes(x = 범죄중분류, y = 발생건수, fill = 구분))
data_sortxy
data_sortxy.head
data_sortxy.head()
score_sortxy[0:10]
data_sortxy[0:10]
data_sortxy[,0:10]
data_sortxy[:,0:10]
data_sortxy[0:10,:]
data_sortxy[10
data_sortxy[10}
ggplot(data_sortxy.head(), aes(x = 범죄중분류, y = 발생건수, fill = 구분))
data_sortxy[10]
data_sortxy[,10]
data_sortxy[10:]
data_xy
data_xy[10]
data_xy[0:10]
data_xy[10]
data_xy[,10]
data_xy[,1]
data_xy[1]
data_xy[0]
data_xy[0:1]
data_xy[0:2]
data_xy[:]
data_xy[:,:]
data_xy[0:5,:]
data_xy[0:5]
data_xy[0:6,10]
data_xy[0:6,0:10]
data_xy[0:6][0:10]
data_xy[0:6]
data_xy[0:5]
data_xy[0:5,0:10]
tapply(data_sort$발생건수,범죄중분류,sum)
data_sum1 <- tapply(data_sort$발생건수,범죄중분류,sum)
data_sort
data_sum1 <- tapply(data_sort$발생건수,범죄중분류,sum)
data_sum1 <- tapply(data_sort$발생건수,"범죄중분류",sum)
data_sum1 <- aggregate(발생건수~범죄중분류,data_sort,sum)
data_sum1
data_sort
paste(data_sort["범죄중분류"],"-"))
paste(data_sort["범죄중분류"],"-")
data_sort[1]
data_sort[1]+data_sort[2]
string(data_sort[1])
str(data_sort[1])
agg <- str(data_sort[1])+str(data_sort[2])
agg
paste(str(data_sort[1]),str(data_sort[2]))
agg = paste(str(data_sort[1]),str(data_sort[2]))
agg
data_sum1
data_sum1 <- aggregate(발생건수~범죄중분류~구,data_sort,sum)
data_sum1 <- aggregate(발생건수~범죄중분류~구,data_sort,sum)
data_sum1 <- aggregate(발생건수~범죄중분류~구분,data_sort,sum)
data_sum1 <- aggregate(발생건수~(범죄중분류,구분),data_sort,sum)
aggregate
??aggregate
data_sum1[10]
data_sum1[0:10]
ggplot(data_sortxy.head(), aes(x = 범죄중분류, y = 발생건수, fill = 구분))
data_xy <- ddply(data_sort, "범죄중분류", transform, 발생건수합계 = cumsum(발생건수))
data_xy[0:5]
data_sortxy <- ddply(data_xy,"범죄중분류",transform, yPosition = 발생건수합계 + 0.5)
data_sortxy
data_xy[c(0:5)]
data_xy[c(0:5),c(0:10)]
data_xy[,c(0:10)]
data_xy[][c(0,10)]
data_xy[c(0,5),c(0,10)]
data_xy[c(5:10)]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1
data_sum1 <- aggregate(발생건수~(범죄중분류,구분),data_sort,sum)
data_sum1 <- aggregate(발생건수~범죄중분류,data_sort,sum)
data_xy <- ddply(data_sort, "범죄중분류", transform, 발생건수합계 = cumsum(발생건수))
data_sum1 <- aggregate(발생건수~범죄중분류,data_sort,sum)
)
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1.head
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1.top
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[10]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[c(10)]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[c(:10)]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[c(10:)]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[c(0,10)]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[c(0,3)]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[c(0:5)]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[3]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[0]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[0,0]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[0,c(0,10)]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[0,c(0:10)]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_sum1[c(0:1),c(0:10)]
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
library(ggplot2)
list.files()
library(plyr) #데이터 가공할 때 많이 사용하는 라이브러리 : arrange(), ddply()
score_sort <- arrange(score_origin, 이름, 과목)
score_origin <- read.csv("D:/Rvisualize/20171101_ggplot/data/학생별과목별성적_국영수_new.csv")
score_xy <- ddply(score_sort, "이름", transform, "누적합계" = cumsum(점수))
#transform : 새로운 연산을 해서 데이터를 각 행별로 출력
## dd 란 들어가는 데이터와 나오는 데이터가 모두 dataframe 이라는 뜻이다.
score_xy
score_sortxy <- ddply(score_xy, "이름", transform, yPosition = 누적합계 - 점수*0.5)
score_sortxy[0:10]
ggplot(score_sortxy, aes(x=이름, y= 점수, fill = 과목)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
ggplot(data_sortxy, aes(x=범죄중분류, y= 발생건수 = 구분)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
ggplot(data_sortxy, aes(x=범죄중분류, y= 발생건수, fill = 구분)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
data_sortxy <- ddply(data_xy,"범죄중분류",transform, yPosition = 발생건수합계 + 0.5)
data_sortxy
ggplot(data_sortxy, aes(x=범죄중분류, y= 발생건수, fill = 구분)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(점수)), color = "white", size = 5)
ggplot(data_sortxy, aes(x=범죄중분류, y= 발생건수, fill = 구분)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(발생건수)), color = "white", size = 5)
data_sortxy[10]
data_sortxy[10:]
data_sortxy[0,0]
data_sortxy[c(0,0)]
data_sortxy[c(0,0),c(0,0)]
data_sortxy[c(0,3),c(0,3)]
data_sortxy[c(0,5),c(0,5)]
data_sortxy[c(0,5):c(0,5)]
data_sortxy[c(0:5),c(0:5)]
data_sortxy[c(0:5),c(0:10)]
data_sortxy[c(0:10),c(0:5)]
data_sort
data_sum1 <- aggregate(발생건수~범죄중분류,data_sort,sum)
data_sum1
data_sum1.sort()
sort(data_sum1)
sort(data_sum1,"발생건수",decreasing = T)
sort(data_sum1,발생건수,decreasing = T)
??sort
sort(dat_sum1,decreasing=T)
sort(data_sum1,decreasing=T)
sort(data_sum1[발생건수],decreasing=T)
sort(data_sum1["발생건수"],decreasing=T)
order(data_sum1[order(발생건수)])
order(data_sum1[order("발생건수")])
data_sum1[order("발생건수")]
arrange(data_sum1,범죄중분류,desc(발생건수))
ggplot(head(data_sortxy,10), aes(x=범죄중분류, y= 발생건수, fill = 구분)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(발생건수)), color = "white", size = 5)
data_sum1 <- arrange(data_sum1,범죄중분류,desc(발생건수))
q
data_sum1
data_sum1 <- arrange(data_sum1,범죄중분류,desc(발생건수))
data_sum1
arrange(data_sum1,범죄중분류,desc(발생건수))
data_sort <- arrange(data_origin,범죄중분류,구분)
data_sort
data_xy <- ddply(data_sort, "범죄중분류", transform, 발생건수합계 = cumsum(발생건수))
data_xy[]
data_sum1 <- aggregate(발생건수~범죄중분류,data_sort,sum)
arrange(data_sum1,범죄중분류,desc(발생건수))
class(data_sort)
arrange(data_sum1, 발생건수)
arrange(data_sum1, desc(발생건수))
head(arrange(data_sum1, desc(발생건수)),10)
top10 <- head(arrange(data_sum1, desc(발생건수)),10)
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
top10
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
top10[범죄중분류]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
top10[0]
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
top10[c(0)]
top10
top10["범죄중분류"]
vec(top10["범죄중분류"])
vector(top10["범죄중분류"])
data_sort[top10["범죄중분류"]]
top10["범죄중분류"]
top10["범죄중분류"][0]
top10["범죄중분류"][c(0}]
#aggregate(계산될칼럼~기준될칼럼, 데이터, 함수)
#tapply(Fruits$Sales, Fruit, sum), 출력값, 기준컬럼, 적용함수
data_xy <- ddply(data_sort, "범죄중분류", transform, 발생건수합계 = cumsum(발생건수))
data_xy[]
data_sortxy <- ddply(data_xy,"범죄중분류",transform, yPosition = 발생건수합계 + 0.5)
data_sortxy[c(0:10),c(0:5)]
ggplot(data_sortxy, aes(x=범죄중분류, y= 발생건수, fill = 구분)) + geom_bar(stat="identity") + geom_text(aes(y=yPosition, label=paste(발생건수)), color = "white", size = 5)
top10["범죄중분류"][c(0)]
c(top10["범죄중분류"])
top10_vec<- c(top10["범죄중분류"])
top10_vec
data_sort(top10_vec)
data_sort[top10_vec]
type(top10_vec)
class(top10_vec)
vec(top10_vec)
vector(top10_vec)
library(ggplot2)
library(plyr)
list.files()
test <- read.csv("2014년 범죄발생 시간대별(구분없음).csv")
date <-c("오전","오전","오전","오전","오후","오후","오후","오후")
test<- data.frame(test,구분=date)
test
test_sort<-arrange(test,범죄중분류,시간)
test_sort
test2<-aggregate(발생건수~범죄중분류+구분,test,sum)
test2
test2_sort<- ddply(test2,"범죄중분류",transform,총건수=sum(발생건수))
test2_sort
ggplot(test2_sort,aes(x=범죄중분류,y=발생건수,fill=구분))+geom_bar(stat="identity")
test3_sort<-head(arrange(test2_sort,desc(총건수)),20)
test3_sort
ggplot(test3_sort,aes(x=범죄중분류,y=발생건수,fill=구분))+geom_bar(stat="identity")+geom_text(aes(y=총건수+10000,label=paste(총건수,"건")),color="black",size=3)
test2
test2_sort<- ddply(test2,"범죄중분류",transform,총건수=sum(발생건수) )
test2_sort
ggplot(test2_sort,aes(x=범죄중분류,y=발생건수,fill=구분))+geom_bar(stat="identity")
test3_sort<-head(arrange(test2_sort,desc(총건수)),20)
test3_sort
ggplot(test3_sort,aes(x=범죄중분류,y=발생건수,fill=구분))+geom_bar(stat="identity")+geom_text(aes(y=총건수+10000,label=paste(총건수,"건")),color="black",size=3)
test3_sort<-head(arrange(test2_sort,desc(총건수)),20)
test3_sort
ggplot(test3_sort,aes(x=범죄중분류,y=발생건수,fill=구분))+geom_bar(stat="identity")+geom_text(aes(y=총건수+10000,label=paste(총건수,"건")),color="black",size=3)
